stages:
  - plan
  - apply

variables:
  FIREFLY_ACCESS_KEY: $FIREFLY_ACCESS_KEY
  FIREFLY_SECRET_KEY: $FIREFLY_SECRET_KEY
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  WORKING_DIR: "aws-stag"

image:  
  name: hashicorp/terraform:1.8.3
  entrypoint:
  - '/usr/bin/env'
  - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - apk add curl
  - cd $WORKING_DIR
  - curl -O https://gofirefly-prod-iac-ci-cli-binaries.s3.amazonaws.com/fireflyci/latest/fireflyci_Linux_x86_64.tar.gz
  - tar -xf fireflyci_Linux_x86_64.tar.gz
  - chmod a+x fireflyci
  - terraform --version
  - terraform init > init.log

plan:
  stage: plan
  script:
    - terraform plan -json -out=tf.plan > plan_log.jsonl && terraform show -json tf.plan > plan_output.json || true
    - ./fireflyci post-plan -l plan_log.jsonl -f plan_output.json -i init.log --workspace $WORKING_DIR
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
  allow_failure: true

apply:
  stage: apply
  script:
    - terraform apply -auto-approve -json > apply_log.jsonl || true
    - ./fireflyci post-apply -f apply_log.jsonl --workspace $WORKING_DIR
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
